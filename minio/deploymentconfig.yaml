---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: minio
    app.kubernetes.io/instance: minio
  name: minio
spec:
  replicas: 1
  selector:
    app: minio
    deploymentconfig: minio
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: minio
        deploymentconfig: minio
    spec:
      serviceAccountName: minio
      containers:
      - imagePullPolicy: Always
        name: minio
        ports:
        - containerPort: 9000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - name: minio-data-volume
          mountPath: /opt/minio/data
        - name: minio-config-volume
          mountPath: /etc/minio/conf
        env:
        - name: VAULT_MINIO_READ_ACCESS_TOKEN
          valueFrom:
            configMapKeyRef:
              name: vault-minio-token
              key: VAULT_MINIO_READ_ACCESS_TOKEN
        readinessProbe:
            httpGet:
              path: /
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 1
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
        livenessProbe:
            httpGet:
              path: /
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: minio-data-volume
        persistentVolumeClaim:
          claimName: minio-data-claim
      - name: minio-config-volume
        persistentVolumeClaim:
          claimName: minio-config-claim
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - minio
      from:
        kind: ImageStreamTag
        name: minio:latest
    type: ImageChange
